# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

def pod_clevertap_ios_sdk 
  pod "CleverTap-iOS-SDK", :modular_headers => true
end

target 'Example' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    # Apple Silicon builds require a library path tweak for Swift library discovery or "symbol not found" for swift things
        installer.aggregate_targets.each do |aggregate_target|
         aggregate_target.user_project.native_targets.each do |target|
          target.build_configurations.each do |config|
           config.build_settings['LIBRARY_SEARCH_PATHS'] = ['$(SDKROOT)/usr/lib/swift', '$(inherited)']
          end
         end
         aggregate_target.user_project.save
        end
  end
end

target 'NotificationService' do
  pod_clevertap_ios_sdk
  pod "CTNotificationService", :modular_headers => true
end

target 'NotificationContent' do
  pod "CTNotificationContent"
end

# Added these target for sample code only in Swift
target 'NotificationServiceSwift' do
  pod_clevertap_ios_sdk
  pod "CTNotificationService", :modular_headers => true
end

target 'NotificationContentSwift' do
  pod "CTNotificationContent"
end
